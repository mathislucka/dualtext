# Generated by Django 3.1.3 on 2020-11-15 15:55

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Annotation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ('created_at',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Corpus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('corpus_meta', models.JSONField()),
            ],
            options={
                'ordering': ('created_at',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Label',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
            ],
            options={
                'ordering': ('created_at',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('allowed_users', models.ManyToManyField(related_name='project_allowed', to=settings.AUTH_USER_MODEL)),
                ('corpora', models.ManyToManyField(to='dualtext_api.Corpus')),
                ('creator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_creator', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('created_at',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=255)),
                ('is_annotated', models.BooleanField(default=False)),
                ('is_reviewed', models.BooleanField(default=False)),
                ('annotator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='task_annotator', to=settings.AUTH_USER_MODEL)),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dualtext_api.project')),
                ('reviewer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='task_reviewer', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ('created_at',),
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Prediction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('score', models.FloatField(null=True)),
                ('method', models.CharField(max_length=255)),
                ('annotation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dualtext_api.annotation')),
                ('label', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dualtext_api.label')),
            ],
            options={
                'ordering': ('created_at',),
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='label',
            name='project',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dualtext_api.project'),
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('content', models.TextField(blank=True, default='')),
                ('corpus', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dualtext_api.corpus')),
            ],
            options={
                'ordering': ('created_at',),
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='annotation',
            name='annotator_labels',
            field=models.ManyToManyField(related_name='annotation_annotator', to='dualtext_api.Label'),
        ),
        migrations.AddField(
            model_name='annotation',
            name='documents',
            field=models.ManyToManyField(to='dualtext_api.Document'),
        ),
        migrations.AddField(
            model_name='annotation',
            name='reviewer_labels',
            field=models.ManyToManyField(related_name='annotation_reviewer', to='dualtext_api.Label'),
        ),
        migrations.AddField(
            model_name='annotation',
            name='task',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dualtext_api.task'),
        ),
    ]
